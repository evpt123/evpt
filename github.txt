tHub的使用的，如果只是简单的想使用GitHub新手可以使用网页版 https://blog.csdn.net/Hanani_Jia/article/details/79855429 这是我写的网页版的使用教程可以去看。

首先，我先对GitHub来一个简单的介绍，GitHub有一个很强大的功能就是，你在服务器上边可以创建一个库（稍后会介绍怎么创建），写代码是一件很重的任务，尤其是很多人完成一个很大的项目的时候，就十分的复杂，一群人一起来写某个项目，大家完成的时间，完成的进度都是不相同的，你写一点我写一点，甚至可能你今天写的出现了错误，影响到了我昨天写的代码，最后怎么才能将大家的代码轻松的汇总起来，又怎么在汇总所有人的代码之后发现错误等等一系列问题。这样我们就用到了GitHub这个软件。我们在GitHub服务器上有一个主仓库，这里用来储存你的所有代码，如果不付费的话是所有人都可以看的，如果你不想让别人看到你的代码，可以选择付费仓库。我们创建了主仓库之后，就可以在电脑上创建分支，之后你就可以在电脑上完成自己的代码，写完之后直接同步在电脑的分支，当你认为可以上传的自己的主仓库时，就可以申请更新，当通过审核的时候，你代码就出现在了自己的主仓库中，这样全世界的程序员都可以查看你的代码。全世界现在已经有300万的注册用户，甚至还有一些相当知名的开源项目也在其中公布代码。在GitHub上你可以看到很多计算机领域的精英所分享的自己的代码。这是GitHub的两个主要优点，适合团队协作，以及下载其他优秀者的代码。

 

 

今天，GitHub已是：一个拥有143万开发者的社区。其中不乏Linux发明者Torvalds这样的顶级黑客，以及Rails创始人DHH这样的年轻极客。

· 这个星球上最流行的开源托管服务。目前已托管431万git项目，不仅越来越多知名开源项目迁入GitHub，比如Ruby on Rails、jQuery、Ruby、Erlang/OTP；近三年流行的开源库往往在GitHub首发，例如：BootStrap、Node.js、CoffeScript等。alexa全球排名414的网站。

 

 

https://github.com/ 这是GitHub的官方网站，在官网上可以注册属于自己的GitHub账号，网上是全英文的，对于英语不好的同学建议使用谷歌浏览器，谷歌浏览器可以翻译网页变为中文使用起来十分方便。

 

通过简单的步骤之后你就会有一个属于自己的GitHub账号。再简单注册完成之后会需要验证你所输入的邮箱才能正常使用你的GitHub。

 在注册完成之后，完成一些简单的设置之后，你需要创建一个属于自己的库

 

在登陆自己的GitHub账号之后，在网页右上角的小加号是用来创建自己的库的按钮，之后的步骤将网页翻译成中文之后，按提示进行创建自己的库即可。

 

第一个框是自己为自己的库起一个名字，第二个框是自己对库的一个简单介绍

在创建完成自己的库之后，下面就要让自己的电脑克隆一个自己所创建的库，方面自己电脑上的代码同步到GitHub你所创建的库当中。

  为了实现，就需要安装一个软件，Git Bash。

 

下面我就介绍一下这个软件的安装，以及简单的配置。

git-scm.com 首先进入GitHub官网，下载适合自己电脑的版本

 

下载完安装包之后运行

 

 

 

在安装过程中直接默认选项即可。

 在对git bash进行配置的时候大多数新手都是一头雾水，下面我对配置的每一步就会有详细的记录。代码我也是从网上和学长那边要来的。

 

我第一次打开软件后看到这个界面也是一脸懵逼的，然后通过查阅了各种各样的资料之后才有了一些思路。

 首先要在本地创建一个ssh key 这个的目的就是你现在需要在你电脑上获得一个密匙，就是咱们平时的验证码一样的东西，获取之后，在你的GitHub账号里边输入之后，你的电脑就和你的GitHub账号联系在一起了，这样以后就可以十分方便的通过Git bash 随时上传你的代码。下边介绍一下如果获得这个钥匙，又是如何输入到你的GitHub里边的呢。

  

很多人第一次打开这个GitHub的时候一脸懵逼，认为这是什么。对于一个新手来说看到这个是没有任何思路，没有任何想法的。

这一栏 开始是你的计算机的名字在我这里就是Hanani @后边的内容是你的计算机型号，很多时候有的人打开之后@后边是乱码，这个时候也不要在意，因为有些电脑型号是中文的，可能在显示的时候出现了问题，不影响你后期的操作。

  接下来，就要开始获取属于你自己的密匙。在git bash中所有功能都是通过简单的一些代码来实现的。获取密匙的时候需要输入

$ ssh-keygen-t rsa-C "your_email@youremail.com"

需要输入这个代码，引号内需要改成你在注册GitHub的时候绑定的邮箱账号。之后会有一些简单的让你确认的操作，之后让你会提示操作路径、密码等等，一般情况下就直接按回车一路过就可以。

 

 

如果之后你出现了这个界面之后，就说明你的密匙已经成功创建了。现在你就需要去他刚刚显示的存储位置打开它，把其中的内容复制出来。

 

 

 

在.ssh这个文件夹中

之后你会看到这些内容，有的人会在id_rsa后边带有一个pub，之前看网上教程需要找到带pub的文件，因为我在生成后没有带.pub的文件，怀着忐忑的心打开id_rsa后发现这里边的密匙也是可以使用的。打开id_rsa的时候需要用记事本的方式打开。

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDIskXqZF3SSFtACK6zoNGJabikTBC3kig6+4j4dCq1tswhA9YkuJCi0WpRmGYWBQ67dyT2or7RedFZlULLZN3nL6AWlo5V2jRXw4WQxCon2rU1p122wmiTzqYOfsykjwullWV4bYcZU4n77A4/9WwlSqZCpEbcdwV8IMkvwfJUInSWqTvmYMcKTWu8yad5DZ2v7LBWfgsL/Tfx7aEB8UjDNJ6SPw30Yijy+62YrftYGgbuwoiL9hDNGO2LfjgOkglHTBJaZe31uQLLWc5uCzd+7Dgh7RaKMmeuz2Uv7yqm/IEU9jH8cPMR9YRPIhmzg38G2s9ILn27QqW9j1hrFY1V 15229020556@163.com

这就是我所获取的密匙，打开之后很长的一段，不要惊讶，没有问题，这就是你所需要的密匙。

 现在你就需要登录到你的GitHub上边添加这个密匙，

 

 

打开你GitHub的设置界面，找到SSH and GPG keys这个选项之后，在网页右上角有一个添加新的SSH keys 点击

 

这里的title 是让你给你的密匙起一个名字，根据个人喜好，什么名字都可以，然后把你在刚刚文件中复制的密匙，填写在下边的大框里。保存即可。

之后你就可以回到你的Git bash上边了

然后输入上边的代码，来检查是否成功绑定。第一次绑定的时候输入上边的代码之后会提示是否continue，在输入yes后如果出现了：You've successfully authenticated, but GitHub does not provide shell access 。那就说明，已经成功连上了GitHub。接下来还需要简单的设置一些东西。

输入上边的代码，name最好和GitHub上边的一样，email是一定要是注册GitHub的那个邮箱地址

这两个的顺序可以颠倒，没有固定的顺序。

 下面就要将你的库克隆下来到本地电脑中，方便以后进行上传代码。

 

在库创建完成之后 会有一个网址出现在网页中。

 

个人习惯将自己的文件储存在d盘之中，所以你先需要将git bash定位在d盘中

 

在git bash中输入 cd /D 注意盘名字一定要是大写。如不输入这个语句 不给git bash定位的话，默认的本地文件位置是在c盘中。

输入之后会出现/D说明定位成功。

之后输入

git clone后边的网址就是你创建库成功之后的网址

之后打开我所定位的D盘

 

可以看到，D盘中已经有以我的库名所创建的文件夹了。

打开这个文件夹，然后在其中创建一个任意格式，任意名称的文件。

 

之后重新定位git 把书 的位置，定位在你库的文件夹。

 

之后输入ls语句 ls的作用是查看你目前所定位的文件夹中的文件，现在可以看出来，我刚刚所创建的test文件已经出现了。

 

然后输入 git add test.txt

之后输入然后git commit -m "cc"  引号内的内容可以随意改动，这个语句的意思是 给你刚刚上传的文件一个备注，方便查找记忆而已

 

输入之后出现以上情况，然后在输入git push origin master 之后会出现一个

 

 

 

界面，在这里登陆你之前注册的GitHub账号之后点击login。

 

如果之后出现这种情况的话，就是登陆失败了，这时候你就需要输入你GitHub的账号名称

输入之后会出现这个界面，然后再次输入你的GitHub密码。

 

出现类似界面，你就可以欢呼了，代表你成功了。

现在打开你的GitHub网站，找到你创建的库

 

发现今天的格子已经绿了，说明你已经上传了你刚刚所创建的文件。

再之后，你只需要将你的代码，放到库的对应的文件夹中，然后使用，git add 、git commit -m "   " 、最后git push origin master，将你的代码提交就可以了。






A
D
A
D
D
原文链接：https://blog.csdn.net/Hanani_Jia/article/details/77950
